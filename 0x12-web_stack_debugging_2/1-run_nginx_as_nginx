#!/usr/bin/env bash

# Stop and disable Apache if it is installed
if command -v apache2 &> /dev/null; then
  service apache2 stop
  update-rc.d apache2 disable
fi

# Install Nginx if not already installed
if ! command -v nginx &> /dev/null; then
  apt-get update
  apt-get install -y nginx
fi

# Create nginx user if it doesn't exist
if ! id -u nginx &>/dev/null; then
  useradd -r -s /bin/false nginx
fi

# Ensure Nginx configuration files exist
if [ ! -f /etc/nginx/nginx.conf ]; then
  echo "Nginx configuration file not found, creating a default one."
  cp /usr/share/nginx/nginx.conf /etc/nginx/nginx.conf
fi

if [ ! -f /etc/nginx/sites-available/default ]; then
  echo "Default site configuration file not found, creating a default one."
  mkdir -p /etc/nginx/sites-available
  cat > /etc/nginx/sites-available/default <<EOL
server {
    listen 8080 default_server;
    listen [::]:8080 default_server;
    root /var/www/html;
    index index.html index.htm index.nginx-debian.html;
    server_name _;
    location / {
        try_files \$uri \$uri/ =404;
    }
}
EOL
fi

# Adjust permissions if necessary
chmod ugo+wrx /etc/nginx/nginx.conf
chmod ugo+wrx /etc/nginx/sites-available/default

# Configure Nginx to run as the nginx user and listen on port 8080
sed -i 's/user www-data;/user nginx;/g' /etc/nginx/nginx.conf
sed -i 's/listen 80;/listen 8080;/g' /etc/nginx/sites-available/default

# Restart Nginx to apply changes
service nginx restart

# Verify that Nginx is running as nginx user and listening on port 8080
pgrep -u nginx nginx
nc -z 0 8080; echo $?
